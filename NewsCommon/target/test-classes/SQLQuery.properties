AccountDAO.addAccount=insert into account (username, password) values (?, ?)
AccountDAO.getAccount=select * from account where username = ?
AccountDAO.getAllAccounts=select * from account
AccountDAO.deleteAccount=delete from account where username = ?
AccountDAO.updateAccount=update account set password=? where username=?

ArticleDAO.addArticle=insert into article (id, main_title, short_title, content, publish_date) values (article_autoincrement_seq.nextval, ?, ?, ?, ?)
ArticleDAO.getArticle=select * from article where id=?
ArticleDAO.getAllArticles_Limit=SELECT * FROM (SELECT a.*, rownum r__ FROM (SELECT * FROM ARTICLE) a WHERE rownum < ((? * ?) + 1 )) WHERE r__ >= (((?-1) * ?) + 1)
ArticleDAO.getAllArticlesSortByDate_Limit=SELECT * FROM (SELECT a.*, rownum r__ FROM (SELECT * FROM ARTICLE ORDER BY PUBLISH_DATE desc) a WHERE rownum < ((? * ?) + 1 )) WHERE r__ >= (((?-1) * ?) + 1)
ArticleDAO.getAllArticlesSortByNumOfComments_Limit=SELECT * FROM (SELECT a.*, rownum r__ FROM (SELECT A.* FROM ARTICLE A JOIN (SELECT A.ID, COUNT(*) AS COMMENTS_NUM FROM ARTICLE A LEFT JOIN COMMENTS C ON A.ID=C.ARTICLE_ID GROUP BY A.ID ORDER BY COMMENTS_NUM DESC) TMP ON A.ID=TMP.ID) a WHERE rownum < ((? * ?) + 1 )) WHERE r__ >= (((?-1) * ?) + 1)
ArticleDAO.deleteArticle=delete from article where id = ?
ArticleDAO.totalCount=select count(*) from article
ArticleDAO.editArticle=update article set main_title=?, short_title=?, content=?, publish_date=?, main_photo=? where id=?

RoleDAO.getAllRoles=select * from role

AuthorDAO.addAuthor=insert into author (id, first_name, last_name) values (author_autoincrement_seq.nextval, ?, ?)
AuthorDAO.getAuthor=select * from author where id = ?
AuthorDAO.getAllAuthors=select * from author
AuthorDAO.getAllAuthorsNotExpired=select * from author where is_working='Y'
AuthorDAO.deleteAuthor=update author set is_working='N' where id=?
AuthorDAO.updateAuthor=update author set first_name=?, last_name=? where id=?

CommentDAO.addComment=insert into comments (article_id, account_id, publish_date, content) values (?, ?, ?, ?)
CommentDAO.getComment=select * from comments where id=?
CommentDAO.getCommentsByArticleId=select * from comments where article_id=?
CommentDAO.getCommentsByAccountId=select * from comments where account_id=?
CommentDAO.deleteComment=delete from comments where id=?

TagDAO.addTag=insert into tag (id, name) values (tag_autoincrement_seq.nextval, ?)
TagDAO.getTag=select * from tag where id=?
TagDAO.getAllTags=select * from tag
TagDAO.deleteTag=delete from tag where id=?
TagDAO.updateTag=update tag set name=? where id=?

Article_Author.addRow=insert into Article_Author (article_id, author_id) values (?, ?)
Article_Author.searchByArticle=select author_id from Article_Author where article_id=?
Article_Author.searchByAuthors=SELECT TMP.ARTICLE_ID FROM (SELECT ARTICLE_ID, COUNT(ARTICLE_ID) AS AuthorCount FROM ARTICLE_AUTHOR WHERE author_id IN (:author_id) GROUP BY ARTICLE_ID) TMP WHERE TMP.AuthorCount=:author_count

Article_Tag.addRow=insert into Article_Tag (article_id, tag_id) values (?, ?)
Article_Tag.searchByTags=SELECT TMP.ARTICLE_ID FROM (SELECT ARTICLE_ID, COUNT(ARTICLE_ID) AS TagCount FROM ARTICLE_TAG WHERE tag_id IN (:tag_id) GROUP BY ARTICLE_ID) TMP WHERE TMP.TagCount=:tag_count
Article_Tag.searchByArticle=SELECT tag_id FROM Article_Tag WHERE article_id=?